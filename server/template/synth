<html>
   <head>
       <title>Sound Pendulum</title>
       <script type="text/javascript" src="/static/js/jquery-1.10.2.min.js"></script>
       <script type="text/javascript" src="/static/js/socket.io.min.js"></script>
       <script type="text/javascript" src="/static/js/buffer-loader.js"></script>
       <link rel="stylesheet" type="text/css" href="/static/css/bootstrap.css">
   </head>
   <body>

       <a class="btn btn-large" onclick="play()">Play</a>
       <a class="btn btn-large" onclick="pause()">Pause</a>


   </body>
<script>

var STATE_IDLE  = 0;
var STATE_BUILD = 1;
var STATE_DROP  = 2;
var STATE_FAST  = 3
var state = STATE_IDLE;
var drop_t = 0;

var last_z = -3000, last_x = 0, last_y = 0, sign = 0, last_m;
var idle_threshold = 25;
var idle_loops = 2;
var idle_count = 0;
var state = STATE_IDLE;

var drop_duration = 1;
var drop_threshold = 250;
var drop_loops = 5;
var drop_count = 0;

// Modulation notes: 
// use gain node to scale to 200. 
// use another osc to be the modulating oscilator 

var max_volume = 1.0;
var osc_volume = .0;

var ctx = new AudioContext();

var osc = ctx.createOscillator()
osc.type = "sine";

var osc2 = ctx.createOscillator()
osc2.frequency.value = 1000; 
osc2.type = "sawtooth";

var master_gain = ctx.createGain();

var osc_gain = ctx.createGain();
osc_gain.gain.value = osc_volume;

osc.connect(osc_gain);
osc2.connect(osc_gain);

var sound0, sound1;


osc_gain.connect(master_gain);
master_gain.connect(ctx.destination);

bufferLoader = new BufferLoader(
    ctx,
    [ 'static/wav/drum.wav', 'static/wav/drop.wav', ],
    finishedLoading
);
bufferLoader.load();

function finishedLoading(bufferList)
{
    sound0 = bufferList[0];
    sound1 = bufferList[1];

    master_gain.gain.value = 0;
    osc.start(0);
    osc2.start(0);
}

function playSound(ctx, buffer) 
{
    var source = ctx.createBufferSource(); 
    source.buffer = buffer;               
    source.connect(master_gain);
    source.start(0);                    
}

function play()
{
    master_gain.gain.value = max_volume;
}
function pause()
{
    master_gain.gain.value = 0;
}

function handler(t, x, y, z)
{
    if (last_z == -3000)
    {
        last_x = x;
        last_y = y;
        last_z = z;
    }

    if (Math.abs(last_x - x) < idle_threshold &&
        Math.abs(last_y - y) < idle_threshold &&
        Math.abs(last_z - z) < idle_threshold)
    {
        if (state == STATE_FAST || state == STATE_BUILD)
        {
            console.log("very slow!");
            idle_count++;
            if (idle_count > idle_loops)
            {
                console.log("idle");
                state = STATE_IDLE;
                pause();
            }
        }
    }
    else
    {
        idle_count = 0;
        if (state == STATE_IDLE)
        {
            console.log("build");
            state = STATE_BUILD;
            play();
        }
    }

    m = Math.sqrt((x * x) + (y * y) + (z * z));
    if (state == STATE_BUILD && last_m - m > drop_threshold)
    {
        state = STATE_DROP;
        drop_t = t;
        console.log("Drop!");
        playSound(ctx, sound1);
    }

    if (state == STATE_DROP)
        console.log("drop_t " + drop_t + " " + t);
    if (state == STATE_DROP && t - drop_t > drop_duration)
    {
        console.log("fast");
        state = STATE_FAST;
        drop_t = 0;
    }

    f = 350+ (z * 5);
    osc.frequency.value = f;

    f = 440 + (x * 10);
    osc2.frequency.value = f;

    if (z > last_z && sign <= 0)
    {
        sign = 1;

        // pendulum is over the center
    }
    else
    if (z < last_z && sign >= 0)
    {
        sign = -1;

        // Pendulum is turning around!
        //playSound(ctx, sound0);
    }

    last_x = x;
    last_y = y;
    last_z = z;
    last_m = m;
}

$(document).ready(function() 
{
    namespace = '/pendulum'; 
    var socket = io.connect('http://' + document.domain + ':' + location.port + namespace);
    socket.on('data', function(msg) {
        d = msg.data.split(",");
        handler(parseInt(d[0]), parseInt(d[1]), parseInt(d[2]), parseInt(d[3]));
    });
});

</script>
</body>
</html>
